{"version":3,"sources":["Layout.js","controllers/eventController.js","EventsByType.js","EventDetail.js","App.js","reportWebVitals.js","index.js","static/stage/logo/nsbe5g.png"],"names":["Layout","_ref","children","React","createElement","Box","className","src","nsbe5g","alt","List","ListItem","href","Stack","alignItems","direction","spacing","Home","ListItemText","primary","Folder","Star","RouterLink","to","CalendarToday","Person","sx","marginTop","ExitToApp","Help","Info","API_URL","handleRegister","async","csrfToken","Cookies","get","console","error","allCookies","log","axios","post","concat","eventId","headers","X-CSRFToken","withCredentials","success","handleUnregister","EventsByType","eventType","useParams","events","setEvents","useState","isUpcoming","useEffect","response","data","fetchEvents","padding","textAlign","margin","Typography","variant","marginBottom","role","aria-label","display","gap","Link","component","textDecoration","fontSize","fontWeight","marginRight","color","Grid","container","item","map","event","xs","sm","md","key","id","Paper","elevation","title","marginY","CalendarMonthTwoToneIcon","start_time","end_time","RoomTwoTone","location","Button","backgroundColor","onClick","is_member_registered","e","is_member_registed","handleButtonClick","width","slug","EventDetail","setEvent","fetchEvent","Date","alert","description","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","module","exports","p"],"mappings":"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","file":"static/js/main.96311190.chunk.js","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { Box, List, ListItem, ListItemText, Stack } from '@mui/material';\nimport { Home, Folder, Star, CalendarToday, Person, ExitToApp, Help, Info } from '@mui/icons-material';\nimport './Layout.css'; \nimport nsbe5g from './static/stage/logo/nsbe5g.png';\n\nconst Layout = ({ children }) => {\n  return (\n    <Box className=\"wrapper\">\n      <Box className=\"sidebar\">\n        <Box className=\"sidebar-header\">\n          <img src={nsbe5g} alt=\"mcneese_icon\" />\n        </Box>\n        <List className=\"list\">\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Home />\n                <ListItemText primary=\"Home\" />\n              </Stack>\n            </a>\n          </ListItem>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/directory\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Folder />\n                <ListItemText primary=\"Directory\" />\n              </Stack>\n            </a>\n          </ListItem>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/points\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Star />\n                <ListItemText primary=\"Points\" />\n              </Stack>\n            </a>\n          </ListItem>\n          <ListItem>\n            <RouterLink to=\"/events\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <CalendarToday />\n                <ListItemText primary=\"Events\" />\n              </Stack>\n            </RouterLink>\n          </ListItem>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/profile\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Person />\n                <ListItemText primary=\"Profile\" />\n              </Stack>\n            </a>\n          </ListItem>\n        </List>\n        <List className=\"bottom_list\" sx={{ marginTop: '200px' }}>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/logout\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <ExitToApp />\n                <ListItemText primary=\"Log Out\" />\n              </Stack>\n            </a>\n          </ListItem>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/help\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Help />\n                <ListItemText primary=\"Help\" />\n              </Stack>\n            </a>\n          </ListItem>\n          <ListItem>\n            <a href=\"http://127.0.0.1:8000/stage/about\" className=\"link\">\n              <Stack alignItems=\"center\" direction=\"row\" spacing={2}>\n                <Info />\n                <ListItemText primary=\"About\" />\n              </Stack>\n            </a>\n          </ListItem>\n        </List>\n      </Box>\n      <Box className=\"content\">\n        {children}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Layout;\n","import axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst API_URL = 'http://127.0.0.1:8000/stage/events';\n\nexport const handleRegister = async (eventId) => {\n    const csrfToken = Cookies.get('csrftoken');\n    if (!csrfToken) {\n        console.error(\"CSRF token is not available. \", csrfToken);\n    }\n\n    const allCookies = Cookies.get();\n    console.log('Available cookies:', allCookies);\n\n    try {\n        await axios.post(\n            `${API_URL}/${eventId}/register/`,\n            {},\n            {\n                headers: {\n                    'X-CSRFToken': csrfToken,\n                },\n                withCredentials: true\n            }\n        );\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to register:', error);\n        return { success: false, error };\n    }\n};\n\nexport const handleUnregister = async (eventId) => {\n    const csrfToken = Cookies.get('csrftoken');\n    console.log(\"CSRF Token: \", csrfToken);\n    try {\n        await axios.post(\n            `${API_URL}/${eventId}/unregister/`,\n            {},\n            {\n                headers: {\n                    'X-CSRFToken': csrfToken\n                },\n                withCredentials: true\n            }\n        );\n        return { success: true };\n    } catch (error) {\n        console.error('Failed to unregister:', error);\n        return { success: false, error };\n    }\n};\n","import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { useParams, Link as RouterLink } from \"react-router-dom\";\nimport { Box, Grid, Link, Paper, Stack, Typography, Button } from \"@mui/material\";\nimport CalendarMonthTwoToneIcon from '@mui/icons-material/CalendarMonthTwoTone';\nimport RoomTwoTone from '@mui/icons-material/RoomTwoTone';\nimport Layout from './Layout';\nimport { handleRegister, handleUnregister } from \"./controllers/eventController.js\";\nimport Cookies from 'js-cookie';\n\nfunction EventsByType() {\n    const { eventType } = useParams();\n    const [events, setEvents] = useState([]);\n    const isUpcoming = eventType === \"upcoming\";\n    const csrfToken = Cookies.get('csrftoken');\n\n    useEffect(() => {\n        async function fetchEvents() {\n            try {\n                const response = await axios.get(\n                    `http://127.0.0.1:8000/stage/events/${eventType}/`,\n                    {\n                        headers: {\n                            'X-CSRFToken': csrfToken\n                        }\n                    }\n                );\n                setEvents(response.data);\n            } catch(error) {\n                console.log(error);\n            }\n        }\n        fetchEvents();\n    }, [eventType, csrfToken]);\n\n    const handleButtonClick = async (event) => {\n        if (!event.is_member_registered) {\n            const result = await handleRegister(event.id);\n            if (result.success) {\n                setEvents(events.map(e => e.id === event.id ? {...e, is_member_registed: true } : e));\n            }\n        } else {\n            const result = await handleUnregister(event.id);\n            if (result.success) {\n                setEvents(events.map(e => e.id === event.id ? {...e, is_member_registed: false} : e))\n            }\n        }\n    }\n\n    return (\n        <Layout>\n            <Box sx={{ padding: '20px' }}>\n                <Box sx={{ textAlign: 'left', margin: '20px 0' }}>\n                    <Typography variant=\"h3\" sx={{ marginBottom: '20px' }}>\n                        Events <span role=\"img\" aria-label=\"calendar\">📅</span>\n                    </Typography>\n                    <Box sx={{ display: 'flex', gap: '10px', marginBottom: '20px' }}>\n                        <nav>\n                            <Link\n                                component={RouterLink} \n                                to=\"/events/upcoming\" \n                                sx={{ \n                                    textDecoration: 'none',\n                                    fontSize: '16px',\n                                    fontWeight: 'bold',\n                                    marginRight: '10px',\n                                    color: isUpcoming ? 'blue' : 'grey',\n                                }}\n                            >\n                                Upcoming Events\n                            </Link>\n                            <Link\n                                component={RouterLink} \n                                to=\"/events/past\" \n                                sx={{ \n                                    textDecoration: 'none',\n                                    fontSize: '16px', \n                                    fontWeight: 'bold' ,\n                                    color:  !isUpcoming ? 'blue' : 'grey',\n                                }}\n                            >\n                                Past Events\n                            </Link>\n                        </nav>\n                    </Box>\n                </Box>\n                <Grid container item spacing={2}>\n                    {events.map(event => \n                        <Grid item xs={12} sm={6} md={4} key={event.id}>\n                            <Paper elevation={3} sx={{ padding: '16px', textAlign: 'left' }}>\n                                <Typography variant=\"h6\">{event.title}</Typography>\n                                <Stack spacing={1} sx={{ marginY: '10px' }}>\n                                    <Stack alignItems=\"center\" direction=\"row\" gap={1}>\n                                        <CalendarMonthTwoToneIcon />\n                                        <Typography>{event.start_time} - {event.end_time}</Typography>           \n                                    </Stack>\n                                    <Stack alignItems=\"center\" direction=\"row\" gap={1}>\n                                        <RoomTwoTone />\n                                        <Typography>{event.location}</Typography>\n                                    </Stack>\n                                </Stack>\n                                <Stack direction=\"row\" spacing={2} sx={{ marginTop: '10px' }}>\n                                    { isUpcoming && (\n                                            <Button\n                                                variant=\"contained\"\n                                                sx={{ backgroundColor: '#F5F5F7', color: '#201414' }}\n                                                onClick={() => handleButtonClick(event)}\n                                            >\n                                                {!event.is_member_registed ? \"Register\" : \"Unregister\"}\n                                            </Button>\n                                    )}\n                                    <Button\n                                        variant=\"contained\"\n                                        sx={{ backgroundColor: '#2F2F96', color: '#F8EA31', width: !isUpcoming ? '98%' : 'inherit' }}\n                                        href={`/event/${event.slug}`}\n                                    >\n                                        See Details\n                                    </Button>\n                                </Stack>\n                            </Paper>\n                        </Grid>\n                    )}\n                </Grid>\n            </Box>\n        </Layout>\n    );\n}\n\nexport default EventsByType;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Layout from './Layout';\nimport axios from 'axios';\nimport { Box, Grid, Paper, Stack, Typography, Button } from \"@mui/material\";\nimport CalendarMonthTwoToneIcon from '@mui/icons-material/CalendarMonthTwoTone';\nimport RoomTwoTone from '@mui/icons-material/RoomTwoTone';\nimport { handleRegister, handleUnregister } from './controllers/eventController';\n\nfunction EventDetail() {\n    const { slug } = useParams();\n    const [event, setEvent] = useState(null);\n\n    useEffect(() => {\n        async function fetchEvent() {\n            try {\n                const response = await axios.get(`http://127.0.0.1:8000/stage/event/${slug}`);\n                setEvent(response.data);\n            } catch (error) {\n                console.log(error);\n            }\n        }\n\n        fetchEvent();\n    }, [slug]);\n\n    if (!event) {\n        return <div>Loading ... </div>;\n    }\n\n    const eventStartTime = new Date(event.start_time);\n    const isUpcoming = eventStartTime > new Date();\n\n    const handleButtonClick = async () => {\n        if (!event.is_member_registered) {\n            const result = await handleRegister(event.id);\n            if (result.success) {\n                setEvent({ ...event, is_member_registed: true });\n                alert(\"Registered successfully\");\n            }\n        } else {\n            const result = await handleUnregister(event.id);\n            if (result.success) {\n                setEvent({ ...event, is_member_registed: false });\n                alert(\"Unregistered successfully\");\n            }\n        }\n    };\n\n    return (\n        <Layout>\n            <Box elevation={3} sx={{ padding: '16px', textAlign: 'left' }}>\n                <Typography variant=\"h6\">{event.title}</Typography>\n                <Stack spacing={1} sx={{ marginY: '10px' }}>\n                    <Stack alignItems=\"center\" direction=\"row\" gap={1}>\n                        <CalendarMonthTwoToneIcon />\n                        <Typography>{event.start_time} - {event.end_time}</Typography>\n                    </Stack>\n                    <Stack alignItems=\"center\" direction=\"row\" gap={1}>\n                        <RoomTwoTone />\n                        <Typography>{event.location}</Typography>\n                    </Stack>\n                </Stack>\n                <Stack direction=\"row\" spacing={2} sx={{ marginTop: '10px' }}>\n                    {isUpcoming && (\n                        <Button\n                            variant=\"contained\"\n                            sx={{ backgroundColor: '#F5F5F7', color: '#201414' }}\n                            onClick={handleButtonClick}\n                        >\n                            {event.is_member_registed ? 'Unregister' : 'Register'}\n                        </Button>\n                    )}\n                </Stack>\n            </Box>\n            <Grid item xs={12} sm={6} md={4}>\n                <Paper sx={{ padding: '16px' }}>\n                    {event.description}\n                </Paper>\n            </Grid>\n        </Layout>\n    );\n}\n\nexport default EventDetail;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Routes} from \"react-router-dom\";\nimport EventsByType from \"./EventsByType\";\nimport EventDetail from \"./EventDetail\";\n\nfunction App() {\n  return (\n    <Router>\n      <Routes>\n        <Route path=\"events/:eventType\" element={<EventsByType />} />\n        <Route path=\"event/:slug\" element={<EventDetail />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","module.exports = __webpack_public_path__ + \"static/media/nsbe5g.fececeb9.png\";"],"sourceRoot":""}